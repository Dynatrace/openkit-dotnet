version: 1.5.0.{build}

# environment variables
environment:
  COVERALLS_REPO_TOKEN:
    secure: IH0irnGyWP3Z9jcxBz6LsnYIH2pStkwq23/tMRWFCFswYfTA5DvVPTp4pbz9r0Hi
  NUGET_API_KEY:
    secure: FLH3rCl/Okbe8lchEljJpnCPrs18DiTlm5oQn3i03yAEIjNhpQcWQDFV3VMPXthc

# Build with Visual Studio 2017
image: Visual Studio 2017

# Build Release and Coverage (2 build jobs)
configuration:
- Release
- Coverage

# fail fast (No need to build Failing Release & Coverage builds)
matrix:
  fast_finish: true

# Assembly patching, only the top level Directory.Build.props file must be patched
dotnet_csproj:
  patch: true
  file: .\*.props
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'


# restore NuGet packages
before_build:
- ps: msbuild /t:restore openkit-dotnet.sln

# build
build:
  project: openkit-dotnet.sln
  verbosity: minimal
  
# run tests with code coverage only for Coverage configuration
for:
-
  matrix:
    only:
      - configuration: Coverage
  test_script:
  - ps: |
      $nunitConsole = "$env:USERPROFILE\.nuget\packages\nunit.consolerunner\3.10.0\tools\nunit3-console.exe"
      $openCoverConsole = "$env:USERPROFILE\.nuget\packages\opencover\4.7.922\tools\OpenCover.Console.exe"
      # Run .NET test assemblies, excluding .NET Core
      $testAssemblies = Get-ChildItem -Recurse -Path .\.build\bin\Coverage\Dynatrace.OpenKit.Tests -Include Dynatrace.OpenKit.Tests.dll | ? {$_.FullName -notmatch "\\netcoreapp\d\.\d\\"}  | % FullName
      & $openCoverConsole -target:"$nunitConsole" -targetargs:"'--result=myresults.xml' $testAssemblies" -register:user -filter:"+[*]Dynatrace.OpenKit* -[*.Tests]*" -hideskipped:"Filter;MissingPdb" -output:coverage.xml
      # Run .NET Core tests
      & $openCoverConsole -target:"dotnet.exe" -targetargs:"test openkit-dotnet.sln --no-build -c Coverage" -register:user  -filter:"+[*]Dynatrace.OpenKit* -[*.Tests]*" -hideskipped:"Filter;MissingPdb" -oldstyle  -output:coverage.xml -mergeoutput
  after_test: 
  - ps: |
      if ("$Env:APPVEYOR_PULL_REQUEST_NUMBER" -eq "" -And "$Env:APPVEYOR_REPO_NAME" -eq "Dynatrace/openkit-dotnet")
      {
          $coveralls = "$env:USERPROFILE\.nuget\packages\coveralls.io\1.4.2\tools\coveralls.net.exe"
          & $coveralls --opencover .\coverage.xml -r $Env:COVERALLS_REPO_TOKEN
      }
      else
      {
          Write-Host("Skipping coveralls.io upload")
          Write-Host("APPVEYOR_PULL_REQUEST_NUMBER=$Env:APPVEYOR_PULL_REQUEST_NUMBER")
          Write-Host("APPVEYOR_REPO_NAME=$Env:APPVEYOR_REPO_NAME")
      }
-
  matrix:
    only:
      - configuration: Release
  test_script:
  - ps: |
      $nunitConsole = "$env:USERPROFILE\.nuget\packages\nunit.consolerunner\3.10.0\tools\nunit3-console.exe"
      # Run .NET test assemblies, excluding .NET Core
      $testAssemblies = Get-ChildItem -Recurse -Path .\.build\bin\Release\Dynatrace.OpenKit.Tests -Include Dynatrace.OpenKit.Tests.dll | ? {$_.FullName -notmatch "\\netcoreapp\d\.\d\\"}  | % FullName
      echo $testAssemblies
      & $nunitConsole $testAssemblies '--result=myresults.xml'
      # Run .NET Core tests
      dotnet.exe test openkit-dotnet.sln --no-build -c Release
  after_build:
  - ps: |
      if ("$Env:APPVEYOR_PULL_REQUEST_NUMBER" -eq "" -And "$Env:APPVEYOR_REPO_NAME" -eq "Dynatrace/openkit-dotnet")
      {
          [xml]$xml = Get-Content .\Directory.Build.props
          $version = $xml.GetElementsByTagName('Project').Item(0).GetElementsByTagName('PropertyGroup').Item(0).GetElementsByTagName('PackageVersion').Item(0).'#text'
          # first compress the directories (NOTE: A copy of all files is needed)
          if( -Not (Test-Path -Path .\.package) ) {
              New-Item -ItemType directory -Path .\.package | Out-Null
          }
          Get-ChildItem -Recurse .\.build\bin\Release\Dynatrace.OpenKit\*\Dynatrace.OpenKit.* | ? {$_.Extension -match "\.dll|\.pdb"}  | ForEach-Object {
              $path = Join-Path -Path .\.package -ChildPath $_.Directory.Name
              if( -Not (Test-Path -Path $path) ) {
                  New-Item -ItemType directory -Path $path | Out-Null
              }
              $newName = Join-Path -Path $path -ChildPath $_.Name
              Copy-Item $_.FullName $newName
          }
          # now the compression works
          Compress-Archive -Path ".\.package\*" -CompressionLevel Optimal -Update -DestinationPath .\Dynatrace.OpenKit.$version.zip
          # create NuGet package and source package
          msbuild.exe /v:minimal /t:Pack /p:IncludeSymbols=true /p:Configuration=Release
      }
      else
      {
          Write-Host("Skipping nuget packaging")
          Write-Host("APPVEYOR_PULL_REQUEST_NUMBER=$Env:APPVEYOR_PULL_REQUEST_NUMBER")
          Write-Host("APPVEYOR_REPO_NAME=$Env:APPVEYOR_REPO_NAME")
      }

# artifacts being published  
artifacts:
- path: .\Dynatrace.OpenKit.*.zip
  name: zip
- path: .\.build\bin\Release\Dynatrace.OpenKit\*.nupkg
  name: nupkg


# deployment
deploy:
# (GitHub)
- provider: GitHub
  release: $(APPVEYOR_REPO_TAG_NAME)
  auth_token:
    secure: SMt+UW9Ruxn51BbZho/uvBEHmWaJ7fFFpmu0p/HTZaFdCD9z87xleqf4XgRmM6qn
  repository: Dynatrace/openkit-dotnet
  prerelease: false
  artifact: /.*\.zip/
  on:
    branch: /release\/.+/
    configuration: Release
    APPVEYOR_REPO_TAG: true
    APPVEYOR_REPO_NAME: Dynatrace/openkit-dotnet
# NuGet
- provider: NuGet
  api_key: $env:NUGET_API_KEY
  artifact: /.*\.nupkg/
  skip_symbols: true
  on:
    branch: /release\/.+/
    configuration: Release
    APPVEYOR_REPO_TAG: true
    APPVEYOR_REPO_NAME: Dynatrace/openkit-dotnet

after_deploy:
- ps: |
    # Since AppVeyor cannot deal with source packages, handle them manually for now
    # See also https://github.com/appveyor/ci/issues/2753
    if ("$Env:APPVEYOR_PULL_REQUEST_NUMBER" -eq "" -And "$Env:APPVEYOR_REPO_NAME" -eq "Dynatrace/openkit-dotnet" -And "$Env:APPVEYOR_REPO_BRANCH" -match "release\/\d+\.\d+" -And "$Env:APPVEYOR_REPO_TAG" -eq $true) {
        Get-ChildItem .\.build\bin\Release\Dynatrace.OpenKit\*.snupkg | % {
            Invoke-WebRequest "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" -OutFile nuget.exe
            .\nuget.exe push $_.FullName -s https://api.nuget.org/v3/index.json -k $env:NUGET_API_KEY
        }
    }